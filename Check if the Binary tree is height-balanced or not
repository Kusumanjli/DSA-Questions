# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def height(self,root):
        if (root is None):
            return -1
        lside = self.height(root.left)
        rside = self.height(root.right)
        return max(lside,rside)+1
    def isBalanced(self, root: Optional[TreeNode]) -> bool   :            
        if(root is None):
            return True
        lh=self.height(root.left)
        rh=self.height(root.right)
        if(lh-rh>1 or rh-lh>1):
            return False
        lside=self.isBalanced(root.left)
        rside=self.isBalanced(root.right)
        if(lside and rside):
            return True
        else:
            return False
#https://leetcode.com/problems/balanced-binary-tree/submissions/
